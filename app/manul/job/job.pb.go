// Code generated by protoc-gen-go. DO NOT EDIT.
// source: argcv/proto/app/manul/job.proto

package job // import "github.com/argcv/go-argcvapis/app/manul/job"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JobServiceClient is the client API for JobService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JobServiceClient interface {
}

type jobServiceClient struct {
	cc *grpc.ClientConn
}

func NewJobServiceClient(cc *grpc.ClientConn) JobServiceClient {
	return &jobServiceClient{cc}
}

// JobServiceServer is the server API for JobService service.
type JobServiceServer interface {
}

func RegisterJobServiceServer(s *grpc.Server, srv JobServiceServer) {
	s.RegisterService(&_JobService_serviceDesc, srv)
}

var _JobService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "argcv.app.manul.JobService",
	HandlerType: (*JobServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "argcv/proto/app/manul/job.proto",
}

func init() {
	proto.RegisterFile("argcv/proto/app/manul/job.proto", fileDescriptor_job_62c5af5e7d3ff1af)
}

var fileDescriptor_job_62c5af5e7d3ff1af = []byte{
	// 141 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4f, 0x2c, 0x4a, 0x4f,
	0x2e, 0xd3, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x4f, 0x2c, 0x28, 0xd0, 0xcf, 0x4d, 0xcc, 0x2b,
	0xcd, 0xd1, 0xcf, 0xca, 0x4f, 0xd2, 0x03, 0x8b, 0x09, 0xf1, 0x83, 0x15, 0xe8, 0x25, 0x16, 0x14,
	0xe8, 0x81, 0xa5, 0x8c, 0x78, 0xb8, 0xb8, 0xbc, 0xf2, 0x93, 0x82, 0x53, 0x8b, 0xca, 0x32, 0x93,
	0x53, 0x9d, 0xa2, 0xb9, 0x24, 0x93, 0xf3, 0x73, 0xf5, 0x20, 0x8a, 0xc0, 0x3a, 0x10, 0x4a, 0x9d,
	0x38, 0xbc, 0xf2, 0x93, 0x02, 0x40, 0x62, 0x01, 0x8c, 0x51, 0xfa, 0xe9, 0x99, 0x25, 0x19, 0xa5,
	0x49, 0x7a, 0xc9, 0xf9, 0xb9, 0xfa, 0x10, 0x3b, 0xd3, 0xf3, 0x75, 0xc1, 0x8c, 0xc4, 0x82, 0xcc,
	0x62, 0x54, 0xab, 0xad, 0xb3, 0xf2, 0x93, 0x7e, 0x30, 0x32, 0x26, 0xb1, 0x81, 0x0d, 0x34, 0x06,
	0x04, 0x00, 0x00, 0xff, 0xff, 0xbb, 0x6f, 0xd9, 0x83, 0xa5, 0x00, 0x00, 0x00,
}
