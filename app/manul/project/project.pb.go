// Code generated by protoc-gen-go. DO NOT EDIT.
// source: argcv/proto/app/manul/project.proto

package project

import (
	fmt "fmt"
	math "math"

	_ "github.com/argcv/go-argcvapis/api/annotations"
	file "github.com/argcv/go-argcvapis/app/manul/file"
	user "github.com/argcv/go-argcvapis/app/manul/user"
	status "github.com/argcv/go-argcvapis/status/status"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Currently, it only support file and folder
type ProjectChecklistElemType int32

const (
	ProjectChecklistElemType_REGULAR_FILE ProjectChecklistElemType = 0
	ProjectChecklistElemType_DIRECTORY    ProjectChecklistElemType = 1
)

var ProjectChecklistElemType_name = map[int32]string{
	0: "REGULAR_FILE",
	1: "DIRECTORY",
}

var ProjectChecklistElemType_value = map[string]int32{
	"REGULAR_FILE": 0,
	"DIRECTORY":    1,
}

func (x ProjectChecklistElemType) String() string {
	return proto.EnumName(ProjectChecklistElemType_name, int32(x))
}

func (ProjectChecklistElemType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cf85089881f8148b, []int{0}
}

// Project Member Type
type ProjectMemberType int32

const (
	ProjectMemberType_OWNER     ProjectMemberType = 0
	ProjectMemberType_MASTER    ProjectMemberType = 1
	ProjectMemberType_DEVELOPER ProjectMemberType = 2
	ProjectMemberType_REPORTER  ProjectMemberType = 3
	ProjectMemberType_GUEST     ProjectMemberType = 4
)

var ProjectMemberType_name = map[int32]string{
	0: "OWNER",
	1: "MASTER",
	2: "DEVELOPER",
	3: "REPORTER",
	4: "GUEST",
}

var ProjectMemberType_value = map[string]int32{
	"OWNER":     0,
	"MASTER":    1,
	"DEVELOPER": 2,
	"REPORTER":  3,
	"GUEST":     4,
}

func (x ProjectMemberType) String() string {
	return proto.EnumName(ProjectMemberType_name, int32(x))
}

func (ProjectMemberType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cf85089881f8148b, []int{1}
}

type ProjectMemberOperation int32

const (
	// Add Member
	ProjectMemberOperation_INSERT ProjectMemberOperation = 0
	// Update Member
	ProjectMemberOperation_UPDATE ProjectMemberOperation = 1
	// Update or Insert Member
	ProjectMemberOperation_UPSERT ProjectMemberOperation = 2
	// Remove member
	ProjectMemberOperation_DELETE ProjectMemberOperation = 3
)

var ProjectMemberOperation_name = map[int32]string{
	0: "INSERT",
	1: "UPDATE",
	2: "UPSERT",
	3: "DELETE",
}

var ProjectMemberOperation_value = map[string]int32{
	"INSERT": 0,
	"UPDATE": 1,
	"UPSERT": 2,
	"DELETE": 3,
}

func (x ProjectMemberOperation) String() string {
	return proto.EnumName(ProjectMemberOperation_name, int32(x))
}

func (ProjectMemberOperation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cf85089881f8148b, []int{2}
}

type ProjectChecklistElem struct {
	// Required Target Path
	// It could be either a path or a
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// Required Target Type
	TargetType           ProjectChecklistElemType `protobuf:"varint,2,opt,name=target_type,json=targetType,proto3,enum=argcv.app.manul.ProjectChecklistElemType" json:"target_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ProjectChecklistElem) Reset()         { *m = ProjectChecklistElem{} }
func (m *ProjectChecklistElem) String() string { return proto.CompactTextString(m) }
func (*ProjectChecklistElem) ProtoMessage()    {}
func (*ProjectChecklistElem) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf85089881f8148b, []int{0}
}

func (m *ProjectChecklistElem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectChecklistElem.Unmarshal(m, b)
}
func (m *ProjectChecklistElem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectChecklistElem.Marshal(b, m, deterministic)
}
func (m *ProjectChecklistElem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectChecklistElem.Merge(m, src)
}
func (m *ProjectChecklistElem) XXX_Size() int {
	return xxx_messageInfo_ProjectChecklistElem.Size(m)
}
func (m *ProjectChecklistElem) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectChecklistElem.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectChecklistElem proto.InternalMessageInfo

func (m *ProjectChecklistElem) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ProjectChecklistElem) GetTargetType() ProjectChecklistElemType {
	if m != nil {
		return m.TargetType
	}
	return ProjectChecklistElemType_REGULAR_FILE
}

type ProjectChecklist struct {
	// Required: project id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Required: project name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Optional: description
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	// Required:
	Checklist            []*ProjectChecklistElem `protobuf:"bytes,5,rep,name=checklist,proto3" json:"checklist,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ProjectChecklist) Reset()         { *m = ProjectChecklist{} }
func (m *ProjectChecklist) String() string { return proto.CompactTextString(m) }
func (*ProjectChecklist) ProtoMessage()    {}
func (*ProjectChecklist) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf85089881f8148b, []int{1}
}

func (m *ProjectChecklist) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectChecklist.Unmarshal(m, b)
}
func (m *ProjectChecklist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectChecklist.Marshal(b, m, deterministic)
}
func (m *ProjectChecklist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectChecklist.Merge(m, src)
}
func (m *ProjectChecklist) XXX_Size() int {
	return xxx_messageInfo_ProjectChecklist.Size(m)
}
func (m *ProjectChecklist) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectChecklist.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectChecklist proto.InternalMessageInfo

func (m *ProjectChecklist) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ProjectChecklist) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProjectChecklist) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *ProjectChecklist) GetChecklist() []*ProjectChecklistElem {
	if m != nil {
		return m.Checklist
	}
	return nil
}

type ProjectEnvironment struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProjectEnvironment) Reset()         { *m = ProjectEnvironment{} }
func (m *ProjectEnvironment) String() string { return proto.CompactTextString(m) }
func (*ProjectEnvironment) ProtoMessage()    {}
func (*ProjectEnvironment) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf85089881f8148b, []int{2}
}

func (m *ProjectEnvironment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectEnvironment.Unmarshal(m, b)
}
func (m *ProjectEnvironment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectEnvironment.Marshal(b, m, deterministic)
}
func (m *ProjectEnvironment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectEnvironment.Merge(m, src)
}
func (m *ProjectEnvironment) XXX_Size() int {
	return xxx_messageInfo_ProjectEnvironment.Size(m)
}
func (m *ProjectEnvironment) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectEnvironment.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectEnvironment proto.InternalMessageInfo

func (m *ProjectEnvironment) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ProjectEnvironment) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ProjectVolume struct {
	LocalPath            string   `protobuf:"bytes,1,opt,name=local_path,json=localPath,proto3" json:"local_path,omitempty"`
	RemotePath           string   `protobuf:"bytes,2,opt,name=remote_path,json=remotePath,proto3" json:"remote_path,omitempty"`
	Option               []string `protobuf:"bytes,3,rep,name=option,proto3" json:"option,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProjectVolume) Reset()         { *m = ProjectVolume{} }
func (m *ProjectVolume) String() string { return proto.CompactTextString(m) }
func (*ProjectVolume) ProtoMessage()    {}
func (*ProjectVolume) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf85089881f8148b, []int{3}
}

func (m *ProjectVolume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectVolume.Unmarshal(m, b)
}
func (m *ProjectVolume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectVolume.Marshal(b, m, deterministic)
}
func (m *ProjectVolume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectVolume.Merge(m, src)
}
func (m *ProjectVolume) XXX_Size() int {
	return xxx_messageInfo_ProjectVolume.Size(m)
}
func (m *ProjectVolume) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectVolume.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectVolume proto.InternalMessageInfo

func (m *ProjectVolume) GetLocalPath() string {
	if m != nil {
		return m.LocalPath
	}
	return ""
}

func (m *ProjectVolume) GetRemotePath() string {
	if m != nil {
		return m.RemotePath
	}
	return ""
}

func (m *ProjectVolume) GetOption() []string {
	if m != nil {
		return m.Option
	}
	return nil
}

type ProjectConfig struct {
	Image                string                  `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Checklist            []*ProjectChecklistElem `protobuf:"bytes,2,rep,name=checklist,proto3" json:"checklist,omitempty"`
	TimeoutSec           uint64                  `protobuf:"varint,3,opt,name=timeout_sec,json=timeoutSec,proto3" json:"timeout_sec,omitempty"`
	MaximumCpu           uint64                  `protobuf:"varint,4,opt,name=maximum_cpu,json=maximumCpu,proto3" json:"maximum_cpu,omitempty"`
	MaximumMemMb         uint64                  `protobuf:"varint,5,opt,name=maximum_mem_mb,json=maximumMemMb,proto3" json:"maximum_mem_mb,omitempty"`
	Env                  []*ProjectEnvironment   `protobuf:"bytes,6,rep,name=env,proto3" json:"env,omitempty"`
	Volume               []*ProjectVolume        `protobuf:"bytes,7,rep,name=volume,proto3" json:"volume,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ProjectConfig) Reset()         { *m = ProjectConfig{} }
func (m *ProjectConfig) String() string { return proto.CompactTextString(m) }
func (*ProjectConfig) ProtoMessage()    {}
func (*ProjectConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf85089881f8148b, []int{4}
}

func (m *ProjectConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectConfig.Unmarshal(m, b)
}
func (m *ProjectConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectConfig.Marshal(b, m, deterministic)
}
func (m *ProjectConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectConfig.Merge(m, src)
}
func (m *ProjectConfig) XXX_Size() int {
	return xxx_messageInfo_ProjectConfig.Size(m)
}
func (m *ProjectConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectConfig proto.InternalMessageInfo

func (m *ProjectConfig) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *ProjectConfig) GetChecklist() []*ProjectChecklistElem {
	if m != nil {
		return m.Checklist
	}
	return nil
}

func (m *ProjectConfig) GetTimeoutSec() uint64 {
	if m != nil {
		return m.TimeoutSec
	}
	return 0
}

func (m *ProjectConfig) GetMaximumCpu() uint64 {
	if m != nil {
		return m.MaximumCpu
	}
	return 0
}

func (m *ProjectConfig) GetMaximumMemMb() uint64 {
	if m != nil {
		return m.MaximumMemMb
	}
	return 0
}

func (m *ProjectConfig) GetEnv() []*ProjectEnvironment {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *ProjectConfig) GetVolume() []*ProjectVolume {
	if m != nil {
		return m.Volume
	}
	return nil
}

// Project Brief Description
type Project struct {
	// Required: project id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Required: project name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Optional: description
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	// Optional: A configure file
	// If it is empty, the '.manul.project.yml' file
	// would be parsed
	// Note:
	// It is NOT required to fill this content
	// in creating stage
	// It is NOT visible if it is listed in 'rich'
	Config *ProjectConfig `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
	// Resource Files
	// It is NOT visible if it is listed in 'rich'
	Files *file.Files `protobuf:"bytes,5,opt,name=files,proto3" json:"files,omitempty"`
	// Optional: Reserved, for additional metadata
	// it is NOT in use now
	// It is NOT visible if it is listed in 'rich'
	Meta                 *_struct.Struct `protobuf:"bytes,6,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Project) Reset()         { *m = Project{} }
func (m *Project) String() string { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()    {}
func (*Project) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf85089881f8148b, []int{5}
}

func (m *Project) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Project.Unmarshal(m, b)
}
func (m *Project) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Project.Marshal(b, m, deterministic)
}
func (m *Project) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Project.Merge(m, src)
}
func (m *Project) XXX_Size() int {
	return xxx_messageInfo_Project.Size(m)
}
func (m *Project) XXX_DiscardUnknown() {
	xxx_messageInfo_Project.DiscardUnknown(m)
}

var xxx_messageInfo_Project proto.InternalMessageInfo

func (m *Project) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Project) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Project) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *Project) GetConfig() *ProjectConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *Project) GetFiles() *file.Files {
	if m != nil {
		return m.Files
	}
	return nil
}

func (m *Project) GetMeta() *_struct.Struct {
	if m != nil {
		return m.Meta
	}
	return nil
}

// List of Project Brief Description
type Projects struct {
	Data                 []*Project `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Offset               int32      `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Size                 int32      `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Total                int32      `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Projects) Reset()         { *m = Projects{} }
func (m *Projects) String() string { return proto.CompactTextString(m) }
func (*Projects) ProtoMessage()    {}
func (*Projects) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf85089881f8148b, []int{6}
}

func (m *Projects) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Projects.Unmarshal(m, b)
}
func (m *Projects) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Projects.Marshal(b, m, deterministic)
}
func (m *Projects) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Projects.Merge(m, src)
}
func (m *Projects) XXX_Size() int {
	return xxx_messageInfo_Projects.Size(m)
}
func (m *Projects) XXX_DiscardUnknown() {
	xxx_messageInfo_Projects.DiscardUnknown(m)
}

var xxx_messageInfo_Projects proto.InternalMessageInfo

func (m *Projects) GetData() []*Project {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Projects) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *Projects) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Projects) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type ListProjectsRequest struct {
	// The standard list filter.
	Filter string `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	// offset
	Offset int32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// size
	Size int32 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	// User Name ($object_id or username)
	Auth                 *user.AuthToken `protobuf:"bytes,4,opt,name=auth,proto3" json:"auth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListProjectsRequest) Reset()         { *m = ListProjectsRequest{} }
func (m *ListProjectsRequest) String() string { return proto.CompactTextString(m) }
func (*ListProjectsRequest) ProtoMessage()    {}
func (*ListProjectsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf85089881f8148b, []int{7}
}

func (m *ListProjectsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectsRequest.Unmarshal(m, b)
}
func (m *ListProjectsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectsRequest.Marshal(b, m, deterministic)
}
func (m *ListProjectsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectsRequest.Merge(m, src)
}
func (m *ListProjectsRequest) XXX_Size() int {
	return xxx_messageInfo_ListProjectsRequest.Size(m)
}
func (m *ListProjectsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectsRequest proto.InternalMessageInfo

func (m *ListProjectsRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ListProjectsRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListProjectsRequest) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ListProjectsRequest) GetAuth() *user.AuthToken {
	if m != nil {
		return m.Auth
	}
	return nil
}

type ListProjectsResponse struct {
	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// The operation result, which can be either an `error` or a valid `projects`.
	// If `success` == `true`, `projects` is set
	// If `success` == `false`, `error` is set.
	//
	// Types that are valid to be assigned to Result:
	//	*ListProjectsResponse_Error
	//	*ListProjectsResponse_Projects
	Result               isListProjectsResponse_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ListProjectsResponse) Reset()         { *m = ListProjectsResponse{} }
func (m *ListProjectsResponse) String() string { return proto.CompactTextString(m) }
func (*ListProjectsResponse) ProtoMessage()    {}
func (*ListProjectsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf85089881f8148b, []int{8}
}

func (m *ListProjectsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectsResponse.Unmarshal(m, b)
}
func (m *ListProjectsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectsResponse.Marshal(b, m, deterministic)
}
func (m *ListProjectsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectsResponse.Merge(m, src)
}
func (m *ListProjectsResponse) XXX_Size() int {
	return xxx_messageInfo_ListProjectsResponse.Size(m)
}
func (m *ListProjectsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectsResponse proto.InternalMessageInfo

func (m *ListProjectsResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ListProjectsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type isListProjectsResponse_Result interface {
	isListProjectsResponse_Result()
}

type ListProjectsResponse_Error struct {
	Error *status.Status `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

type ListProjectsResponse_Projects struct {
	Projects *Projects `protobuf:"bytes,4,opt,name=projects,proto3,oneof"`
}

func (*ListProjectsResponse_Error) isListProjectsResponse_Result() {}

func (*ListProjectsResponse_Projects) isListProjectsResponse_Result() {}

func (m *ListProjectsResponse) GetResult() isListProjectsResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *ListProjectsResponse) GetError() *status.Status {
	if x, ok := m.GetResult().(*ListProjectsResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (m *ListProjectsResponse) GetProjects() *Projects {
	if x, ok := m.GetResult().(*ListProjectsResponse_Projects); ok {
		return x.Projects
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ListProjectsResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ListProjectsResponse_OneofMarshaler, _ListProjectsResponse_OneofUnmarshaler, _ListProjectsResponse_OneofSizer, []interface{}{
		(*ListProjectsResponse_Error)(nil),
		(*ListProjectsResponse_Projects)(nil),
	}
}

func _ListProjectsResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ListProjectsResponse)
	// result
	switch x := m.Result.(type) {
	case *ListProjectsResponse_Error:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Error); err != nil {
			return err
		}
	case *ListProjectsResponse_Projects:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Projects); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ListProjectsResponse.Result has unexpected type %T", x)
	}
	return nil
}

func _ListProjectsResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ListProjectsResponse)
	switch tag {
	case 3: // result.error
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(status.Status)
		err := b.DecodeMessage(msg)
		m.Result = &ListProjectsResponse_Error{msg}
		return true, err
	case 4: // result.projects
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Projects)
		err := b.DecodeMessage(msg)
		m.Result = &ListProjectsResponse_Projects{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ListProjectsResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ListProjectsResponse)
	// result
	switch x := m.Result.(type) {
	case *ListProjectsResponse_Error:
		s := proto.Size(x.Error)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ListProjectsResponse_Projects:
		s := proto.Size(x.Projects)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CreateProjectRequest struct {
	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// User Name ($object_id or username)
	Auth                 *user.AuthToken `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CreateProjectRequest) Reset()         { *m = CreateProjectRequest{} }
func (m *CreateProjectRequest) String() string { return proto.CompactTextString(m) }
func (*CreateProjectRequest) ProtoMessage()    {}
func (*CreateProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf85089881f8148b, []int{9}
}

func (m *CreateProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateProjectRequest.Unmarshal(m, b)
}
func (m *CreateProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateProjectRequest.Marshal(b, m, deterministic)
}
func (m *CreateProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateProjectRequest.Merge(m, src)
}
func (m *CreateProjectRequest) XXX_Size() int {
	return xxx_messageInfo_CreateProjectRequest.Size(m)
}
func (m *CreateProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateProjectRequest proto.InternalMessageInfo

func (m *CreateProjectRequest) GetProject() *Project {
	if m != nil {
		return m.Project
	}
	return nil
}

func (m *CreateProjectRequest) GetAuth() *user.AuthToken {
	if m != nil {
		return m.Auth
	}
	return nil
}

type CreateProjectResponse struct {
	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Types that are valid to be assigned to Result:
	//	*CreateProjectResponse_Error
	//	*CreateProjectResponse_Project
	Result               isCreateProjectResponse_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *CreateProjectResponse) Reset()         { *m = CreateProjectResponse{} }
func (m *CreateProjectResponse) String() string { return proto.CompactTextString(m) }
func (*CreateProjectResponse) ProtoMessage()    {}
func (*CreateProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf85089881f8148b, []int{10}
}

func (m *CreateProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateProjectResponse.Unmarshal(m, b)
}
func (m *CreateProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateProjectResponse.Marshal(b, m, deterministic)
}
func (m *CreateProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateProjectResponse.Merge(m, src)
}
func (m *CreateProjectResponse) XXX_Size() int {
	return xxx_messageInfo_CreateProjectResponse.Size(m)
}
func (m *CreateProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateProjectResponse proto.InternalMessageInfo

func (m *CreateProjectResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *CreateProjectResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type isCreateProjectResponse_Result interface {
	isCreateProjectResponse_Result()
}

type CreateProjectResponse_Error struct {
	Error *status.Status `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

type CreateProjectResponse_Project struct {
	Project *Project `protobuf:"bytes,4,opt,name=project,proto3,oneof"`
}

func (*CreateProjectResponse_Error) isCreateProjectResponse_Result() {}

func (*CreateProjectResponse_Project) isCreateProjectResponse_Result() {}

func (m *CreateProjectResponse) GetResult() isCreateProjectResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *CreateProjectResponse) GetError() *status.Status {
	if x, ok := m.GetResult().(*CreateProjectResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (m *CreateProjectResponse) GetProject() *Project {
	if x, ok := m.GetResult().(*CreateProjectResponse_Project); ok {
		return x.Project
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CreateProjectResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CreateProjectResponse_OneofMarshaler, _CreateProjectResponse_OneofUnmarshaler, _CreateProjectResponse_OneofSizer, []interface{}{
		(*CreateProjectResponse_Error)(nil),
		(*CreateProjectResponse_Project)(nil),
	}
}

func _CreateProjectResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CreateProjectResponse)
	// result
	switch x := m.Result.(type) {
	case *CreateProjectResponse_Error:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Error); err != nil {
			return err
		}
	case *CreateProjectResponse_Project:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Project); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CreateProjectResponse.Result has unexpected type %T", x)
	}
	return nil
}

func _CreateProjectResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CreateProjectResponse)
	switch tag {
	case 3: // result.error
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(status.Status)
		err := b.DecodeMessage(msg)
		m.Result = &CreateProjectResponse_Error{msg}
		return true, err
	case 4: // result.project
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Project)
		err := b.DecodeMessage(msg)
		m.Result = &CreateProjectResponse_Project{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CreateProjectResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CreateProjectResponse)
	// result
	switch x := m.Result.(type) {
	case *CreateProjectResponse_Error:
		s := proto.Size(x.Error)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CreateProjectResponse_Project:
		s := proto.Size(x.Project)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type UpdateProjectRequest struct {
	Id      string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Project *Project `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	// User Name ($object_id or username)
	Auth                 *user.AuthToken `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpdateProjectRequest) Reset()         { *m = UpdateProjectRequest{} }
func (m *UpdateProjectRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateProjectRequest) ProtoMessage()    {}
func (*UpdateProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf85089881f8148b, []int{11}
}

func (m *UpdateProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateProjectRequest.Unmarshal(m, b)
}
func (m *UpdateProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateProjectRequest.Marshal(b, m, deterministic)
}
func (m *UpdateProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateProjectRequest.Merge(m, src)
}
func (m *UpdateProjectRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateProjectRequest.Size(m)
}
func (m *UpdateProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateProjectRequest proto.InternalMessageInfo

func (m *UpdateProjectRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateProjectRequest) GetProject() *Project {
	if m != nil {
		return m.Project
	}
	return nil
}

func (m *UpdateProjectRequest) GetAuth() *user.AuthToken {
	if m != nil {
		return m.Auth
	}
	return nil
}

type UpdateProjectResponse struct {
	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// The operation result, which can be either an `error` or a valid `projects`.
	// If `success` == `true`, `project` is set
	// If `success` == `false`, `error` is set.
	//
	// Types that are valid to be assigned to Result:
	//	*UpdateProjectResponse_Error
	//	*UpdateProjectResponse_Project
	Result               isUpdateProjectResponse_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *UpdateProjectResponse) Reset()         { *m = UpdateProjectResponse{} }
func (m *UpdateProjectResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateProjectResponse) ProtoMessage()    {}
func (*UpdateProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf85089881f8148b, []int{12}
}

func (m *UpdateProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateProjectResponse.Unmarshal(m, b)
}
func (m *UpdateProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateProjectResponse.Marshal(b, m, deterministic)
}
func (m *UpdateProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateProjectResponse.Merge(m, src)
}
func (m *UpdateProjectResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateProjectResponse.Size(m)
}
func (m *UpdateProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateProjectResponse proto.InternalMessageInfo

func (m *UpdateProjectResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *UpdateProjectResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type isUpdateProjectResponse_Result interface {
	isUpdateProjectResponse_Result()
}

type UpdateProjectResponse_Error struct {
	Error *status.Status `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

type UpdateProjectResponse_Project struct {
	Project *Project `protobuf:"bytes,4,opt,name=project,proto3,oneof"`
}

func (*UpdateProjectResponse_Error) isUpdateProjectResponse_Result() {}

func (*UpdateProjectResponse_Project) isUpdateProjectResponse_Result() {}

func (m *UpdateProjectResponse) GetResult() isUpdateProjectResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *UpdateProjectResponse) GetError() *status.Status {
	if x, ok := m.GetResult().(*UpdateProjectResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (m *UpdateProjectResponse) GetProject() *Project {
	if x, ok := m.GetResult().(*UpdateProjectResponse_Project); ok {
		return x.Project
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UpdateProjectResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UpdateProjectResponse_OneofMarshaler, _UpdateProjectResponse_OneofUnmarshaler, _UpdateProjectResponse_OneofSizer, []interface{}{
		(*UpdateProjectResponse_Error)(nil),
		(*UpdateProjectResponse_Project)(nil),
	}
}

func _UpdateProjectResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UpdateProjectResponse)
	// result
	switch x := m.Result.(type) {
	case *UpdateProjectResponse_Error:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Error); err != nil {
			return err
		}
	case *UpdateProjectResponse_Project:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Project); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UpdateProjectResponse.Result has unexpected type %T", x)
	}
	return nil
}

func _UpdateProjectResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UpdateProjectResponse)
	switch tag {
	case 3: // result.error
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(status.Status)
		err := b.DecodeMessage(msg)
		m.Result = &UpdateProjectResponse_Error{msg}
		return true, err
	case 4: // result.project
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Project)
		err := b.DecodeMessage(msg)
		m.Result = &UpdateProjectResponse_Project{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UpdateProjectResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UpdateProjectResponse)
	// result
	switch x := m.Result.(type) {
	case *UpdateProjectResponse_Error:
		s := proto.Size(x.Error)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UpdateProjectResponse_Project:
		s := proto.Size(x.Project)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type GetProjectRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// rich == true:
	// full doc, only for admin and bot
	Rich bool `protobuf:"varint,2,opt,name=rich,proto3" json:"rich,omitempty"`
	// User Name ($object_id or username)
	Auth                 *user.AuthToken `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetProjectRequest) Reset()         { *m = GetProjectRequest{} }
func (m *GetProjectRequest) String() string { return proto.CompactTextString(m) }
func (*GetProjectRequest) ProtoMessage()    {}
func (*GetProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf85089881f8148b, []int{13}
}

func (m *GetProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectRequest.Unmarshal(m, b)
}
func (m *GetProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectRequest.Marshal(b, m, deterministic)
}
func (m *GetProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectRequest.Merge(m, src)
}
func (m *GetProjectRequest) XXX_Size() int {
	return xxx_messageInfo_GetProjectRequest.Size(m)
}
func (m *GetProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectRequest proto.InternalMessageInfo

func (m *GetProjectRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetProjectRequest) GetRich() bool {
	if m != nil {
		return m.Rich
	}
	return false
}

func (m *GetProjectRequest) GetAuth() *user.AuthToken {
	if m != nil {
		return m.Auth
	}
	return nil
}

type GetProjectResponse struct {
	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// The operation result, which can be either an `error` or a valid `projects`.
	// If `success` == `true`, `projects` is set
	// If `success` == `false`, `error` is set.
	//
	// Types that are valid to be assigned to Result:
	//	*GetProjectResponse_Error
	//	*GetProjectResponse_Project
	Result               isGetProjectResponse_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *GetProjectResponse) Reset()         { *m = GetProjectResponse{} }
func (m *GetProjectResponse) String() string { return proto.CompactTextString(m) }
func (*GetProjectResponse) ProtoMessage()    {}
func (*GetProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf85089881f8148b, []int{14}
}

func (m *GetProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectResponse.Unmarshal(m, b)
}
func (m *GetProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectResponse.Marshal(b, m, deterministic)
}
func (m *GetProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectResponse.Merge(m, src)
}
func (m *GetProjectResponse) XXX_Size() int {
	return xxx_messageInfo_GetProjectResponse.Size(m)
}
func (m *GetProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectResponse proto.InternalMessageInfo

func (m *GetProjectResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *GetProjectResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type isGetProjectResponse_Result interface {
	isGetProjectResponse_Result()
}

type GetProjectResponse_Error struct {
	Error *status.Status `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

type GetProjectResponse_Project struct {
	Project *Project `protobuf:"bytes,4,opt,name=project,proto3,oneof"`
}

func (*GetProjectResponse_Error) isGetProjectResponse_Result() {}

func (*GetProjectResponse_Project) isGetProjectResponse_Result() {}

func (m *GetProjectResponse) GetResult() isGetProjectResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *GetProjectResponse) GetError() *status.Status {
	if x, ok := m.GetResult().(*GetProjectResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (m *GetProjectResponse) GetProject() *Project {
	if x, ok := m.GetResult().(*GetProjectResponse_Project); ok {
		return x.Project
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GetProjectResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GetProjectResponse_OneofMarshaler, _GetProjectResponse_OneofUnmarshaler, _GetProjectResponse_OneofSizer, []interface{}{
		(*GetProjectResponse_Error)(nil),
		(*GetProjectResponse_Project)(nil),
	}
}

func _GetProjectResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GetProjectResponse)
	// result
	switch x := m.Result.(type) {
	case *GetProjectResponse_Error:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Error); err != nil {
			return err
		}
	case *GetProjectResponse_Project:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Project); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GetProjectResponse.Result has unexpected type %T", x)
	}
	return nil
}

func _GetProjectResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GetProjectResponse)
	switch tag {
	case 3: // result.error
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(status.Status)
		err := b.DecodeMessage(msg)
		m.Result = &GetProjectResponse_Error{msg}
		return true, err
	case 4: // result.project
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Project)
		err := b.DecodeMessage(msg)
		m.Result = &GetProjectResponse_Project{msg}
		return true, err
	default:
		return false, nil
	}
}

func _GetProjectResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GetProjectResponse)
	// result
	switch x := m.Result.(type) {
	case *GetProjectResponse_Error:
		s := proto.Size(x.Error)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetProjectResponse_Project:
		s := proto.Size(x.Project)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type GetProjectChecklistRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// User Name ($object_id or username)
	Auth                 *user.AuthToken `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetProjectChecklistRequest) Reset()         { *m = GetProjectChecklistRequest{} }
func (m *GetProjectChecklistRequest) String() string { return proto.CompactTextString(m) }
func (*GetProjectChecklistRequest) ProtoMessage()    {}
func (*GetProjectChecklistRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf85089881f8148b, []int{15}
}

func (m *GetProjectChecklistRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectChecklistRequest.Unmarshal(m, b)
}
func (m *GetProjectChecklistRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectChecklistRequest.Marshal(b, m, deterministic)
}
func (m *GetProjectChecklistRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectChecklistRequest.Merge(m, src)
}
func (m *GetProjectChecklistRequest) XXX_Size() int {
	return xxx_messageInfo_GetProjectChecklistRequest.Size(m)
}
func (m *GetProjectChecklistRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectChecklistRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectChecklistRequest proto.InternalMessageInfo

func (m *GetProjectChecklistRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetProjectChecklistRequest) GetAuth() *user.AuthToken {
	if m != nil {
		return m.Auth
	}
	return nil
}

type GetProjectChecklistResponse struct {
	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// The operation result, which can be either an `error` or a valid `projects`.
	// If `success` == `true`, `projects` is set
	// If `success` == `false`, `error` is set.
	//
	// Types that are valid to be assigned to Result:
	//	*GetProjectChecklistResponse_Error
	//	*GetProjectChecklistResponse_Data
	Result               isGetProjectChecklistResponse_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *GetProjectChecklistResponse) Reset()         { *m = GetProjectChecklistResponse{} }
func (m *GetProjectChecklistResponse) String() string { return proto.CompactTextString(m) }
func (*GetProjectChecklistResponse) ProtoMessage()    {}
func (*GetProjectChecklistResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf85089881f8148b, []int{16}
}

func (m *GetProjectChecklistResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectChecklistResponse.Unmarshal(m, b)
}
func (m *GetProjectChecklistResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectChecklistResponse.Marshal(b, m, deterministic)
}
func (m *GetProjectChecklistResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectChecklistResponse.Merge(m, src)
}
func (m *GetProjectChecklistResponse) XXX_Size() int {
	return xxx_messageInfo_GetProjectChecklistResponse.Size(m)
}
func (m *GetProjectChecklistResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectChecklistResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectChecklistResponse proto.InternalMessageInfo

func (m *GetProjectChecklistResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *GetProjectChecklistResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type isGetProjectChecklistResponse_Result interface {
	isGetProjectChecklistResponse_Result()
}

type GetProjectChecklistResponse_Error struct {
	Error *status.Status `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

type GetProjectChecklistResponse_Data struct {
	Data *ProjectChecklist `protobuf:"bytes,4,opt,name=data,proto3,oneof"`
}

func (*GetProjectChecklistResponse_Error) isGetProjectChecklistResponse_Result() {}

func (*GetProjectChecklistResponse_Data) isGetProjectChecklistResponse_Result() {}

func (m *GetProjectChecklistResponse) GetResult() isGetProjectChecklistResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *GetProjectChecklistResponse) GetError() *status.Status {
	if x, ok := m.GetResult().(*GetProjectChecklistResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (m *GetProjectChecklistResponse) GetData() *ProjectChecklist {
	if x, ok := m.GetResult().(*GetProjectChecklistResponse_Data); ok {
		return x.Data
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GetProjectChecklistResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GetProjectChecklistResponse_OneofMarshaler, _GetProjectChecklistResponse_OneofUnmarshaler, _GetProjectChecklistResponse_OneofSizer, []interface{}{
		(*GetProjectChecklistResponse_Error)(nil),
		(*GetProjectChecklistResponse_Data)(nil),
	}
}

func _GetProjectChecklistResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GetProjectChecklistResponse)
	// result
	switch x := m.Result.(type) {
	case *GetProjectChecklistResponse_Error:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Error); err != nil {
			return err
		}
	case *GetProjectChecklistResponse_Data:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Data); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GetProjectChecklistResponse.Result has unexpected type %T", x)
	}
	return nil
}

func _GetProjectChecklistResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GetProjectChecklistResponse)
	switch tag {
	case 3: // result.error
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(status.Status)
		err := b.DecodeMessage(msg)
		m.Result = &GetProjectChecklistResponse_Error{msg}
		return true, err
	case 4: // result.data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ProjectChecklist)
		err := b.DecodeMessage(msg)
		m.Result = &GetProjectChecklistResponse_Data{msg}
		return true, err
	default:
		return false, nil
	}
}

func _GetProjectChecklistResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GetProjectChecklistResponse)
	// result
	switch x := m.Result.(type) {
	case *GetProjectChecklistResponse_Error:
		s := proto.Size(x.Error)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetProjectChecklistResponse_Data:
		s := proto.Size(x.Data)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type DeleteProjectRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// User Name ($object_id or username)
	Auth                 *user.AuthToken `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DeleteProjectRequest) Reset()         { *m = DeleteProjectRequest{} }
func (m *DeleteProjectRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteProjectRequest) ProtoMessage()    {}
func (*DeleteProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf85089881f8148b, []int{17}
}

func (m *DeleteProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteProjectRequest.Unmarshal(m, b)
}
func (m *DeleteProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteProjectRequest.Marshal(b, m, deterministic)
}
func (m *DeleteProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteProjectRequest.Merge(m, src)
}
func (m *DeleteProjectRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteProjectRequest.Size(m)
}
func (m *DeleteProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteProjectRequest proto.InternalMessageInfo

func (m *DeleteProjectRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteProjectRequest) GetAuth() *user.AuthToken {
	if m != nil {
		return m.Auth
	}
	return nil
}

type DeleteProjectResponse struct {
	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// error message
	Error                *status.Status `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DeleteProjectResponse) Reset()         { *m = DeleteProjectResponse{} }
func (m *DeleteProjectResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteProjectResponse) ProtoMessage()    {}
func (*DeleteProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf85089881f8148b, []int{18}
}

func (m *DeleteProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteProjectResponse.Unmarshal(m, b)
}
func (m *DeleteProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteProjectResponse.Marshal(b, m, deterministic)
}
func (m *DeleteProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteProjectResponse.Merge(m, src)
}
func (m *DeleteProjectResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteProjectResponse.Size(m)
}
func (m *DeleteProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteProjectResponse proto.InternalMessageInfo

func (m *DeleteProjectResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *DeleteProjectResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteProjectResponse) GetError() *status.Status {
	if m != nil {
		return m.Error
	}
	return nil
}

// One Project Member Info
type ProjectMember struct {
	// Required: project id
	Id   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	User *user.User        `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Type ProjectMemberType `protobuf:"varint,3,opt,name=type,proto3,enum=argcv.app.manul.ProjectMemberType" json:"type,omitempty"`
	// second for unix time
	// 0 for never expired
	Expire               uint64   `protobuf:"varint,4,opt,name=expire,proto3" json:"expire,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProjectMember) Reset()         { *m = ProjectMember{} }
func (m *ProjectMember) String() string { return proto.CompactTextString(m) }
func (*ProjectMember) ProtoMessage()    {}
func (*ProjectMember) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf85089881f8148b, []int{19}
}

func (m *ProjectMember) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectMember.Unmarshal(m, b)
}
func (m *ProjectMember) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectMember.Marshal(b, m, deterministic)
}
func (m *ProjectMember) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectMember.Merge(m, src)
}
func (m *ProjectMember) XXX_Size() int {
	return xxx_messageInfo_ProjectMember.Size(m)
}
func (m *ProjectMember) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectMember.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectMember proto.InternalMessageInfo

func (m *ProjectMember) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ProjectMember) GetUser() *user.User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *ProjectMember) GetType() ProjectMemberType {
	if m != nil {
		return m.Type
	}
	return ProjectMemberType_OWNER
}

func (m *ProjectMember) GetExpire() uint64 {
	if m != nil {
		return m.Expire
	}
	return 0
}

// List of Project Members
type ProjectMembers struct {
	Data                 []*ProjectMember `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Offset               int32            `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Size                 int32            `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Total                int32            `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ProjectMembers) Reset()         { *m = ProjectMembers{} }
func (m *ProjectMembers) String() string { return proto.CompactTextString(m) }
func (*ProjectMembers) ProtoMessage()    {}
func (*ProjectMembers) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf85089881f8148b, []int{20}
}

func (m *ProjectMembers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectMembers.Unmarshal(m, b)
}
func (m *ProjectMembers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectMembers.Marshal(b, m, deterministic)
}
func (m *ProjectMembers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectMembers.Merge(m, src)
}
func (m *ProjectMembers) XXX_Size() int {
	return xxx_messageInfo_ProjectMembers.Size(m)
}
func (m *ProjectMembers) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectMembers.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectMembers proto.InternalMessageInfo

func (m *ProjectMembers) GetData() []*ProjectMember {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ProjectMembers) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ProjectMembers) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ProjectMembers) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type ListProjectMembersRequest struct {
	// project id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The standard list filter.
	Filter string `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	// offset
	Offset int32 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// size
	Size int32 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	// Auth
	Auth                 *user.AuthToken `protobuf:"bytes,5,opt,name=auth,proto3" json:"auth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListProjectMembersRequest) Reset()         { *m = ListProjectMembersRequest{} }
func (m *ListProjectMembersRequest) String() string { return proto.CompactTextString(m) }
func (*ListProjectMembersRequest) ProtoMessage()    {}
func (*ListProjectMembersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf85089881f8148b, []int{21}
}

func (m *ListProjectMembersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectMembersRequest.Unmarshal(m, b)
}
func (m *ListProjectMembersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectMembersRequest.Marshal(b, m, deterministic)
}
func (m *ListProjectMembersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectMembersRequest.Merge(m, src)
}
func (m *ListProjectMembersRequest) XXX_Size() int {
	return xxx_messageInfo_ListProjectMembersRequest.Size(m)
}
func (m *ListProjectMembersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectMembersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectMembersRequest proto.InternalMessageInfo

func (m *ListProjectMembersRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ListProjectMembersRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ListProjectMembersRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListProjectMembersRequest) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ListProjectMembersRequest) GetAuth() *user.AuthToken {
	if m != nil {
		return m.Auth
	}
	return nil
}

type ListProjectMembersResponse struct {
	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// The operation result, which can be either an `error` or a valid `projects`.
	// If `success` == `true`, `members` is set
	// If `success` == `false`, `error` is set.
	//
	// Types that are valid to be assigned to Result:
	//	*ListProjectMembersResponse_Error
	//	*ListProjectMembersResponse_Members
	Result               isListProjectMembersResponse_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *ListProjectMembersResponse) Reset()         { *m = ListProjectMembersResponse{} }
func (m *ListProjectMembersResponse) String() string { return proto.CompactTextString(m) }
func (*ListProjectMembersResponse) ProtoMessage()    {}
func (*ListProjectMembersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf85089881f8148b, []int{22}
}

func (m *ListProjectMembersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectMembersResponse.Unmarshal(m, b)
}
func (m *ListProjectMembersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectMembersResponse.Marshal(b, m, deterministic)
}
func (m *ListProjectMembersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectMembersResponse.Merge(m, src)
}
func (m *ListProjectMembersResponse) XXX_Size() int {
	return xxx_messageInfo_ListProjectMembersResponse.Size(m)
}
func (m *ListProjectMembersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectMembersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectMembersResponse proto.InternalMessageInfo

func (m *ListProjectMembersResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ListProjectMembersResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type isListProjectMembersResponse_Result interface {
	isListProjectMembersResponse_Result()
}

type ListProjectMembersResponse_Error struct {
	Error *status.Status `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

type ListProjectMembersResponse_Members struct {
	Members *ProjectMembers `protobuf:"bytes,4,opt,name=members,proto3,oneof"`
}

func (*ListProjectMembersResponse_Error) isListProjectMembersResponse_Result() {}

func (*ListProjectMembersResponse_Members) isListProjectMembersResponse_Result() {}

func (m *ListProjectMembersResponse) GetResult() isListProjectMembersResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *ListProjectMembersResponse) GetError() *status.Status {
	if x, ok := m.GetResult().(*ListProjectMembersResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (m *ListProjectMembersResponse) GetMembers() *ProjectMembers {
	if x, ok := m.GetResult().(*ListProjectMembersResponse_Members); ok {
		return x.Members
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ListProjectMembersResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ListProjectMembersResponse_OneofMarshaler, _ListProjectMembersResponse_OneofUnmarshaler, _ListProjectMembersResponse_OneofSizer, []interface{}{
		(*ListProjectMembersResponse_Error)(nil),
		(*ListProjectMembersResponse_Members)(nil),
	}
}

func _ListProjectMembersResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ListProjectMembersResponse)
	// result
	switch x := m.Result.(type) {
	case *ListProjectMembersResponse_Error:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Error); err != nil {
			return err
		}
	case *ListProjectMembersResponse_Members:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Members); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ListProjectMembersResponse.Result has unexpected type %T", x)
	}
	return nil
}

func _ListProjectMembersResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ListProjectMembersResponse)
	switch tag {
	case 3: // result.error
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(status.Status)
		err := b.DecodeMessage(msg)
		m.Result = &ListProjectMembersResponse_Error{msg}
		return true, err
	case 4: // result.members
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ProjectMembers)
		err := b.DecodeMessage(msg)
		m.Result = &ListProjectMembersResponse_Members{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ListProjectMembersResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ListProjectMembersResponse)
	// result
	switch x := m.Result.(type) {
	case *ListProjectMembersResponse_Error:
		s := proto.Size(x.Error)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ListProjectMembersResponse_Members:
		s := proto.Size(x.Members)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ProjectMembersUpdateElem struct {
	Member               *ProjectMember         `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`
	Op                   ProjectMemberOperation `protobuf:"varint,2,opt,name=op,proto3,enum=argcv.app.manul.ProjectMemberOperation" json:"op,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ProjectMembersUpdateElem) Reset()         { *m = ProjectMembersUpdateElem{} }
func (m *ProjectMembersUpdateElem) String() string { return proto.CompactTextString(m) }
func (*ProjectMembersUpdateElem) ProtoMessage()    {}
func (*ProjectMembersUpdateElem) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf85089881f8148b, []int{23}
}

func (m *ProjectMembersUpdateElem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectMembersUpdateElem.Unmarshal(m, b)
}
func (m *ProjectMembersUpdateElem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectMembersUpdateElem.Marshal(b, m, deterministic)
}
func (m *ProjectMembersUpdateElem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectMembersUpdateElem.Merge(m, src)
}
func (m *ProjectMembersUpdateElem) XXX_Size() int {
	return xxx_messageInfo_ProjectMembersUpdateElem.Size(m)
}
func (m *ProjectMembersUpdateElem) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectMembersUpdateElem.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectMembersUpdateElem proto.InternalMessageInfo

func (m *ProjectMembersUpdateElem) GetMember() *ProjectMember {
	if m != nil {
		return m.Member
	}
	return nil
}

func (m *ProjectMembersUpdateElem) GetOp() ProjectMemberOperation {
	if m != nil {
		return m.Op
	}
	return ProjectMemberOperation_INSERT
}

type UpdateProjectMemberRequest struct {
	// project id
	Id   string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data []*ProjectMembersUpdateElem `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	// User Id
	Auth                 *user.AuthToken `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpdateProjectMemberRequest) Reset()         { *m = UpdateProjectMemberRequest{} }
func (m *UpdateProjectMemberRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateProjectMemberRequest) ProtoMessage()    {}
func (*UpdateProjectMemberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf85089881f8148b, []int{24}
}

func (m *UpdateProjectMemberRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateProjectMemberRequest.Unmarshal(m, b)
}
func (m *UpdateProjectMemberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateProjectMemberRequest.Marshal(b, m, deterministic)
}
func (m *UpdateProjectMemberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateProjectMemberRequest.Merge(m, src)
}
func (m *UpdateProjectMemberRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateProjectMemberRequest.Size(m)
}
func (m *UpdateProjectMemberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateProjectMemberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateProjectMemberRequest proto.InternalMessageInfo

func (m *UpdateProjectMemberRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateProjectMemberRequest) GetData() []*ProjectMembersUpdateElem {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateProjectMemberRequest) GetAuth() *user.AuthToken {
	if m != nil {
		return m.Auth
	}
	return nil
}

type UpdateProjectMemberResponse struct {
	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// The operation result, which can be either an `error` or a valid `projects`.
	// If `success` == `true`, `member` is set
	// If `success` == `false`, `error` is set.
	//
	// Types that are valid to be assigned to Result:
	//	*UpdateProjectMemberResponse_Error
	//	*UpdateProjectMemberResponse_Member
	Result               isUpdateProjectMemberResponse_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *UpdateProjectMemberResponse) Reset()         { *m = UpdateProjectMemberResponse{} }
func (m *UpdateProjectMemberResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateProjectMemberResponse) ProtoMessage()    {}
func (*UpdateProjectMemberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf85089881f8148b, []int{25}
}

func (m *UpdateProjectMemberResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateProjectMemberResponse.Unmarshal(m, b)
}
func (m *UpdateProjectMemberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateProjectMemberResponse.Marshal(b, m, deterministic)
}
func (m *UpdateProjectMemberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateProjectMemberResponse.Merge(m, src)
}
func (m *UpdateProjectMemberResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateProjectMemberResponse.Size(m)
}
func (m *UpdateProjectMemberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateProjectMemberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateProjectMemberResponse proto.InternalMessageInfo

func (m *UpdateProjectMemberResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *UpdateProjectMemberResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type isUpdateProjectMemberResponse_Result interface {
	isUpdateProjectMemberResponse_Result()
}

type UpdateProjectMemberResponse_Error struct {
	Error *status.Status `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

type UpdateProjectMemberResponse_Member struct {
	Member *ProjectMember `protobuf:"bytes,4,opt,name=member,proto3,oneof"`
}

func (*UpdateProjectMemberResponse_Error) isUpdateProjectMemberResponse_Result() {}

func (*UpdateProjectMemberResponse_Member) isUpdateProjectMemberResponse_Result() {}

func (m *UpdateProjectMemberResponse) GetResult() isUpdateProjectMemberResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *UpdateProjectMemberResponse) GetError() *status.Status {
	if x, ok := m.GetResult().(*UpdateProjectMemberResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (m *UpdateProjectMemberResponse) GetMember() *ProjectMember {
	if x, ok := m.GetResult().(*UpdateProjectMemberResponse_Member); ok {
		return x.Member
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UpdateProjectMemberResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UpdateProjectMemberResponse_OneofMarshaler, _UpdateProjectMemberResponse_OneofUnmarshaler, _UpdateProjectMemberResponse_OneofSizer, []interface{}{
		(*UpdateProjectMemberResponse_Error)(nil),
		(*UpdateProjectMemberResponse_Member)(nil),
	}
}

func _UpdateProjectMemberResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UpdateProjectMemberResponse)
	// result
	switch x := m.Result.(type) {
	case *UpdateProjectMemberResponse_Error:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Error); err != nil {
			return err
		}
	case *UpdateProjectMemberResponse_Member:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Member); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UpdateProjectMemberResponse.Result has unexpected type %T", x)
	}
	return nil
}

func _UpdateProjectMemberResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UpdateProjectMemberResponse)
	switch tag {
	case 3: // result.error
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(status.Status)
		err := b.DecodeMessage(msg)
		m.Result = &UpdateProjectMemberResponse_Error{msg}
		return true, err
	case 4: // result.member
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ProjectMember)
		err := b.DecodeMessage(msg)
		m.Result = &UpdateProjectMemberResponse_Member{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UpdateProjectMemberResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UpdateProjectMemberResponse)
	// result
	switch x := m.Result.(type) {
	case *UpdateProjectMemberResponse_Error:
		s := proto.Size(x.Error)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UpdateProjectMemberResponse_Member:
		s := proto.Size(x.Member)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterEnum("argcv.app.manul.ProjectChecklistElemType", ProjectChecklistElemType_name, ProjectChecklistElemType_value)
	proto.RegisterEnum("argcv.app.manul.ProjectMemberType", ProjectMemberType_name, ProjectMemberType_value)
	proto.RegisterEnum("argcv.app.manul.ProjectMemberOperation", ProjectMemberOperation_name, ProjectMemberOperation_value)
	proto.RegisterType((*ProjectChecklistElem)(nil), "argcv.app.manul.ProjectChecklistElem")
	proto.RegisterType((*ProjectChecklist)(nil), "argcv.app.manul.ProjectChecklist")
	proto.RegisterType((*ProjectEnvironment)(nil), "argcv.app.manul.ProjectEnvironment")
	proto.RegisterType((*ProjectVolume)(nil), "argcv.app.manul.ProjectVolume")
	proto.RegisterType((*ProjectConfig)(nil), "argcv.app.manul.ProjectConfig")
	proto.RegisterType((*Project)(nil), "argcv.app.manul.Project")
	proto.RegisterType((*Projects)(nil), "argcv.app.manul.Projects")
	proto.RegisterType((*ListProjectsRequest)(nil), "argcv.app.manul.ListProjectsRequest")
	proto.RegisterType((*ListProjectsResponse)(nil), "argcv.app.manul.ListProjectsResponse")
	proto.RegisterType((*CreateProjectRequest)(nil), "argcv.app.manul.CreateProjectRequest")
	proto.RegisterType((*CreateProjectResponse)(nil), "argcv.app.manul.CreateProjectResponse")
	proto.RegisterType((*UpdateProjectRequest)(nil), "argcv.app.manul.UpdateProjectRequest")
	proto.RegisterType((*UpdateProjectResponse)(nil), "argcv.app.manul.UpdateProjectResponse")
	proto.RegisterType((*GetProjectRequest)(nil), "argcv.app.manul.GetProjectRequest")
	proto.RegisterType((*GetProjectResponse)(nil), "argcv.app.manul.GetProjectResponse")
	proto.RegisterType((*GetProjectChecklistRequest)(nil), "argcv.app.manul.GetProjectChecklistRequest")
	proto.RegisterType((*GetProjectChecklistResponse)(nil), "argcv.app.manul.GetProjectChecklistResponse")
	proto.RegisterType((*DeleteProjectRequest)(nil), "argcv.app.manul.DeleteProjectRequest")
	proto.RegisterType((*DeleteProjectResponse)(nil), "argcv.app.manul.DeleteProjectResponse")
	proto.RegisterType((*ProjectMember)(nil), "argcv.app.manul.ProjectMember")
	proto.RegisterType((*ProjectMembers)(nil), "argcv.app.manul.ProjectMembers")
	proto.RegisterType((*ListProjectMembersRequest)(nil), "argcv.app.manul.ListProjectMembersRequest")
	proto.RegisterType((*ListProjectMembersResponse)(nil), "argcv.app.manul.ListProjectMembersResponse")
	proto.RegisterType((*ProjectMembersUpdateElem)(nil), "argcv.app.manul.ProjectMembersUpdateElem")
	proto.RegisterType((*UpdateProjectMemberRequest)(nil), "argcv.app.manul.UpdateProjectMemberRequest")
	proto.RegisterType((*UpdateProjectMemberResponse)(nil), "argcv.app.manul.UpdateProjectMemberResponse")
}

func init() {
	proto.RegisterFile("argcv/proto/app/manul/project.proto", fileDescriptor_cf85089881f8148b)
}

var fileDescriptor_cf85089881f8148b = []byte{
	// 1600 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x58, 0x5b, 0x6f, 0xdc, 0x44,
	0x14, 0xce, 0xec, 0x2d, 0xd9, 0x93, 0x0b, 0xdb, 0x69, 0xd2, 0x6e, 0xb6, 0x97, 0xa4, 0x6e, 0x4b,
	0x73, 0x29, 0xbb, 0x22, 0xd0, 0x04, 0xb5, 0x20, 0x94, 0x26, 0x6e, 0x53, 0x94, 0x34, 0xd1, 0x64,
	0x53, 0x44, 0x85, 0x14, 0x39, 0xce, 0x64, 0x63, 0xba, 0x5e, 0x1b, 0x7b, 0xbc, 0xb4, 0x8d, 0x22,
	0x21, 0x1e, 0x40, 0xc0, 0x03, 0x42, 0xf0, 0x04, 0x0f, 0x48, 0xfc, 0x08, 0x24, 0xc4, 0x53, 0x41,
	0xfc, 0x02, 0xf8, 0x09, 0xfc, 0x07, 0x78, 0x44, 0x73, 0xd9, 0xab, 0xbd, 0x9b, 0x4d, 0x41, 0x91,
	0xfa, 0xe4, 0x99, 0xf1, 0x77, 0xe6, 0x7c, 0xe7, 0x3b, 0x73, 0x39, 0x36, 0x5c, 0x36, 0xbc, 0x92,
	0x59, 0x2d, 0xb8, 0x9e, 0xc3, 0x9c, 0x82, 0xe1, 0xba, 0x05, 0xdb, 0xa8, 0x04, 0x65, 0xde, 0xff,
	0x80, 0x9a, 0x2c, 0x2f, 0xc6, 0xf1, 0x4b, 0x02, 0x94, 0x37, 0x5c, 0x37, 0x2f, 0x5e, 0xe7, 0x2e,
	0xb5, 0x5a, 0x59, 0x05, 0xa3, 0x52, 0x71, 0x98, 0xc1, 0x2c, 0xa7, 0xe2, 0x4b, 0x9b, 0xdc, 0x44,
	0x33, 0xc4, 0x67, 0x06, 0x0b, 0x7c, 0xf5, 0x50, 0x80, 0xc9, 0x68, 0xcf, 0x7b, 0x56, 0x99, 0x76,
	0x47, 0x04, 0x3e, 0xf5, 0x14, 0xe2, 0x7c, 0xc9, 0x71, 0x4a, 0x65, 0x2a, 0x21, 0x3b, 0xc1, 0x5e,
	0xc1, 0x67, 0x5e, 0x50, 0xa3, 0xad, 0x55, 0x61, 0x74, 0x43, 0xc6, 0xb1, 0xb4, 0x4f, 0xcd, 0x47,
	0x65, 0xcb, 0x67, 0x7a, 0x99, 0xda, 0x18, 0x43, 0xc2, 0x35, 0xd8, 0x7e, 0x16, 0x4d, 0xa2, 0xa9,
	0x34, 0x11, 0x6d, 0xfc, 0x0e, 0x0c, 0x32, 0xc3, 0x2b, 0x51, 0xb6, 0xcd, 0x9e, 0xb8, 0x34, 0x1b,
	0x9b, 0x44, 0x53, 0x23, 0x73, 0xd3, 0xf9, 0xb6, 0xc0, 0xf3, 0x51, 0xf3, 0x15, 0x9f, 0xb8, 0x94,
	0x80, 0xb4, 0xe6, 0x6d, 0xed, 0x2b, 0x04, 0x99, 0x76, 0x20, 0x1e, 0x81, 0x98, 0xb5, 0xab, 0x5c,
	0xc6, 0xac, 0x5d, 0x4e, 0xa2, 0x62, 0xd8, 0xd2, 0x53, 0x9a, 0x88, 0x36, 0x1f, 0xdb, 0xa5, 0xbe,
	0x99, 0x8d, 0xcb, 0x31, 0xde, 0xc6, 0x4b, 0x90, 0x36, 0x6b, 0x93, 0x64, 0x93, 0x93, 0xf1, 0xa9,
	0xc1, 0xb9, 0xab, 0x3d, 0xd1, 0x22, 0x0d, 0x3b, 0xed, 0x4d, 0xc0, 0x0a, 0xa2, 0x57, 0xaa, 0x96,
	0xe7, 0x54, 0x6c, 0x5a, 0x61, 0x38, 0x03, 0xf1, 0x47, 0xf4, 0x89, 0xe2, 0xc4, 0x9b, 0x78, 0x14,
	0x92, 0x55, 0xa3, 0x1c, 0xd4, 0x58, 0xc9, 0x8e, 0x56, 0x82, 0x61, 0x65, 0xfd, 0xc0, 0x29, 0x07,
	0x36, 0xc5, 0x17, 0x00, 0xca, 0x8e, 0x69, 0x94, 0xb7, 0x9b, 0x64, 0x4c, 0x8b, 0x91, 0x0d, 0xae,
	0xe5, 0x04, 0x0c, 0x7a, 0xd4, 0x76, 0x18, 0x95, 0xef, 0xe5, 0x5c, 0x20, 0x87, 0x04, 0xe0, 0x0c,
	0xa4, 0x1c, 0x97, 0x2f, 0x96, 0x6c, 0x7c, 0x32, 0x3e, 0x95, 0x26, 0xaa, 0xa7, 0x3d, 0x8b, 0xd5,
	0x3d, 0x2d, 0x39, 0x95, 0x3d, 0xab, 0xc4, 0x09, 0x59, 0xb6, 0x51, 0xa2, 0xca, 0x89, 0xec, 0xb4,
	0x6a, 0x12, 0x7b, 0x3e, 0x4d, 0x38, 0x4b, 0x66, 0xd9, 0xd4, 0x09, 0xd8, 0xb6, 0x4f, 0xa5, 0xe6,
	0x09, 0x02, 0x6a, 0x68, 0x93, 0x9a, 0x1c, 0x60, 0x1b, 0x8f, 0x2d, 0x3b, 0xb0, 0xb7, 0x4d, 0x37,
	0xc8, 0x26, 0x24, 0x40, 0x0d, 0x2d, 0xb9, 0x01, 0xbe, 0x02, 0x23, 0x35, 0x80, 0x4d, 0xed, 0x6d,
	0x7b, 0x27, 0x9b, 0x14, 0x98, 0x21, 0x35, 0xba, 0x46, 0xed, 0xb5, 0x1d, 0x7c, 0x03, 0xe2, 0xb4,
	0x52, 0xcd, 0xa6, 0x04, 0xcd, 0xcb, 0x9d, 0x68, 0x36, 0xe5, 0x85, 0x70, 0x3c, 0x9e, 0x87, 0x54,
	0x55, 0xa8, 0x9d, 0xed, 0x17, 0x96, 0x17, 0x3b, 0x59, 0xca, 0x9c, 0x10, 0x85, 0xd6, 0xfe, 0x44,
	0xd0, 0xaf, 0xde, 0x3c, 0xf7, 0x9a, 0x9b, 0x87, 0x94, 0x29, 0xf4, 0x17, 0x41, 0x77, 0xf1, 0x2d,
	0xb3, 0x44, 0x14, 0x1a, 0x5f, 0x87, 0x24, 0xdf, 0xbe, 0xbe, 0xd0, 0x61, 0x70, 0xee, 0x4c, 0xc8,
	0xec, 0x0e, 0x7f, 0x4b, 0x24, 0x08, 0xcf, 0x42, 0xc2, 0xa6, 0xcc, 0xc8, 0xa6, 0x04, 0xf8, 0x6c,
	0x5e, 0xee, 0xe5, 0x7c, 0x6d, 0x2f, 0xe7, 0x37, 0xc5, 0x5e, 0x26, 0x02, 0xa4, 0x3d, 0x85, 0x01,
	0xe5, 0xd3, 0xc7, 0xd7, 0x21, 0xb1, 0x6b, 0x30, 0x23, 0x8b, 0x84, 0x30, 0xd9, 0x4e, 0xe4, 0x88,
	0x40, 0x89, 0xc5, 0xb6, 0xb7, 0xe7, 0x53, 0x26, 0xc2, 0x4e, 0x12, 0xd5, 0xe3, 0x81, 0xfb, 0xd6,
	0x53, 0x2a, 0x02, 0x4f, 0x12, 0xd1, 0xe6, 0xcb, 0x8d, 0x39, 0xcc, 0x28, 0x8b, 0xb8, 0x93, 0x44,
	0x76, 0xb4, 0xcf, 0x11, 0x9c, 0x5e, 0xb5, 0x7c, 0x56, 0x23, 0x40, 0xe8, 0x87, 0x01, 0xf5, 0x19,
	0x9f, 0x79, 0xcf, 0x2a, 0x33, 0xea, 0x29, 0x89, 0x55, 0xef, 0x58, 0x1e, 0xf3, 0x90, 0x30, 0x02,
	0xb6, 0xaf, 0x84, 0xce, 0x85, 0x62, 0x59, 0x0c, 0xd8, 0x7e, 0xd1, 0x79, 0x44, 0x2b, 0x44, 0xe0,
	0xb4, 0x5f, 0x10, 0x8c, 0xb6, 0x72, 0xf1, 0x5d, 0xa7, 0xe2, 0x53, 0x9c, 0x85, 0x7e, 0x3f, 0x30,
	0x4d, 0xea, 0xfb, 0x82, 0xcd, 0x00, 0xa9, 0x75, 0xf9, 0x1b, 0x9b, 0xfa, 0x3e, 0xdf, 0x45, 0x32,
	0xf1, 0xb5, 0x2e, 0xcf, 0x17, 0xf5, 0x3c, 0xc7, 0x13, 0x8c, 0x06, 0xe7, 0x46, 0x95, 0x77, 0x75,
	0x4c, 0x6f, 0x8a, 0xc7, 0x4a, 0x1f, 0x91, 0x20, 0xbc, 0x00, 0x03, 0xea, 0x5a, 0xf0, 0x15, 0xdd,
	0xf1, 0x4e, 0xd2, 0x73, 0xab, 0x3a, 0xf8, 0xf6, 0x00, 0xa4, 0x3c, 0xea, 0x07, 0x65, 0xa6, 0x3d,
	0x85, 0xd1, 0x25, 0x8f, 0x1a, 0x8c, 0xd6, 0x52, 0xa4, 0x94, 0x9c, 0x83, 0x7e, 0x85, 0x16, 0xe4,
	0xbb, 0x25, 0xb5, 0x06, 0xac, 0x2b, 0x17, 0xeb, 0x51, 0xb9, 0x9f, 0x11, 0x8c, 0xb5, 0x39, 0x3f,
	0x31, 0xe9, 0x5e, 0x6f, 0xc4, 0x97, 0xe8, 0x1e, 0xdf, 0x4a, 0x5f, 0x3d, 0xc2, 0x26, 0xdd, 0xbe,
	0x40, 0x30, 0xba, 0xe5, 0xee, 0x86, 0x85, 0x6b, 0xdf, 0xe1, 0x4d, 0x42, 0xc6, 0x8e, 0x2b, 0x64,
	0xfc, 0x18, 0x42, 0xb6, 0x91, 0x79, 0x61, 0x84, 0x2c, 0xc1, 0xa9, 0xbb, 0x94, 0x1d, 0x21, 0x22,
	0x86, 0x84, 0x67, 0x99, 0x72, 0x65, 0x0d, 0x10, 0xd1, 0x3e, 0xb6, 0x48, 0x3f, 0x21, 0xc0, 0xcd,
	0x9e, 0x5e, 0x18, 0x85, 0xde, 0x87, 0x5c, 0x83, 0x77, 0xfd, 0xf2, 0xec, 0x24, 0xd5, 0x71, 0x37,
	0xe1, 0xaf, 0x08, 0xce, 0x45, 0x4e, 0x7f, 0x82, 0xa7, 0x98, 0xbc, 0x3c, 0xa4, 0x38, 0x97, 0x8e,
	0x2c, 0x1b, 0x56, 0xfa, 0xe4, 0x3d, 0xd2, 0x24, 0xd1, 0x03, 0x18, 0x5d, 0xa6, 0x65, 0x7a, 0xe4,
	0x66, 0x3c, 0xae, 0x38, 0x1f, 0xc1, 0x58, 0xdb, 0xbc, 0xff, 0x41, 0x95, 0x99, 0x1e, 0x54, 0x51,
	0x9a, 0x68, 0xdf, 0xa1, 0x7a, 0xdd, 0xb5, 0x46, 0xed, 0x1d, 0xea, 0x85, 0x42, 0x99, 0x86, 0x04,
	0x2f, 0xbb, 0x55, 0x28, 0x63, 0xa1, 0x50, 0xb6, 0x7c, 0xea, 0x11, 0x01, 0xc1, 0xf3, 0x90, 0x10,
	0x25, 0x74, 0x5c, 0x94, 0xd0, 0x5a, 0x27, 0x81, 0xa5, 0x23, 0x51, 0x3b, 0x0b, 0x3c, 0xbf, 0x35,
	0xe9, 0x63, 0xd7, 0xf2, 0xa8, 0xaa, 0xb4, 0x54, 0x4f, 0xfb, 0x14, 0xc1, 0x48, 0x8b, 0x8d, 0x8f,
	0xe7, 0x5a, 0x0a, 0x80, 0x8b, 0xdd, 0x5d, 0xfc, 0x6f, 0x65, 0xc0, 0x0f, 0x08, 0xc6, 0x9b, 0xae,
	0x5e, 0x45, 0xa6, 0x53, 0xf2, 0x1b, 0xc5, 0x41, 0xac, 0x43, 0x71, 0x10, 0x8f, 0xe4, 0x91, 0x88,
	0x28, 0x0e, 0x92, 0x3d, 0x2e, 0xa0, 0xdf, 0x11, 0xe4, 0xa2, 0x18, 0x9e, 0xd8, 0xe6, 0xba, 0xc5,
	0xe7, 0x11, 0x4e, 0xd5, 0xfe, 0x9a, 0xe8, 0x9e, 0x1b, 0x6e, 0x5a, 0xb3, 0x68, 0xda, 0x60, 0x5f,
	0x22, 0xc8, 0xb6, 0xe2, 0xe4, 0x7d, 0x23, 0xbe, 0xde, 0xe6, 0x21, 0x25, 0x2d, 0x54, 0xa9, 0x70,
	0x54, 0xfa, 0x15, 0x1a, 0x2f, 0x40, 0xcc, 0x71, 0xd5, 0x87, 0xdd, 0xb5, 0xee, 0x36, 0xeb, 0x2e,
	0xf5, 0xc4, 0xc7, 0x2c, 0x89, 0x39, 0xae, 0xf6, 0x3d, 0x82, 0x5c, 0xcb, 0x7d, 0xa7, 0x26, 0xee,
	0x90, 0xf8, 0xb7, 0xd4, 0xe2, 0x94, 0xdf, 0x25, 0xd3, 0x47, 0x08, 0xd0, 0x08, 0x4c, 0xad, 0xd3,
	0xe3, 0x5e, 0x34, 0xbf, 0x21, 0x38, 0x17, 0xc9, 0xee, 0xc4, 0x92, 0xfe, 0x46, 0x3d, 0x21, 0x89,
	0x5e, 0x12, 0xb2, 0xd2, 0x57, 0x4b, 0x49, 0x23, 0xe3, 0x33, 0xb7, 0xea, 0x09, 0x0f, 0x7d, 0x5a,
	0xe3, 0x0c, 0x0c, 0x11, 0xfd, 0xee, 0xd6, 0xea, 0x22, 0xd9, 0xbe, 0x73, 0x6f, 0x55, 0xcf, 0xf4,
	0xe1, 0x61, 0x48, 0x2f, 0xdf, 0x23, 0xfa, 0x52, 0x71, 0x9d, 0xbc, 0x97, 0x41, 0x33, 0x04, 0x4e,
	0x85, 0x0e, 0x15, 0x9c, 0x86, 0xe4, 0xfa, 0xbb, 0xf7, 0x75, 0x92, 0xe9, 0xc3, 0x00, 0xa9, 0xb5,
	0xc5, 0xcd, 0xa2, 0x4e, 0x32, 0x48, 0x98, 0xea, 0x0f, 0xf4, 0xd5, 0xf5, 0x0d, 0x9d, 0x64, 0x62,
	0x78, 0x08, 0x06, 0x88, 0xbe, 0xb1, 0x4e, 0xf8, 0xcb, 0x38, 0xb7, 0xb9, 0xbb, 0xa5, 0x6f, 0x16,
	0x33, 0x89, 0x99, 0x15, 0x38, 0x13, 0xbd, 0x24, 0xf8, 0x6c, 0xf7, 0xee, 0x6f, 0xea, 0xa4, 0x28,
	0x67, 0xde, 0xda, 0x58, 0x5e, 0x2c, 0xea, 0x19, 0x24, 0xdb, 0x62, 0x3c, 0xc6, 0xdb, 0xcb, 0xfa,
	0xaa, 0x5e, 0xd4, 0x33, 0xf1, 0xb9, 0x67, 0xe9, 0xfa, 0xf9, 0xb5, 0x49, 0xbd, 0xaa, 0x65, 0x52,
	0xfc, 0x23, 0x82, 0xa1, 0xe6, 0x22, 0x1e, 0x5f, 0x09, 0x49, 0x16, 0xf1, 0xbd, 0x91, 0xbb, 0x7a,
	0x04, 0x4a, 0x66, 0x5c, 0xd3, 0x3f, 0xf9, 0xe3, 0xaf, 0x6f, 0x62, 0x6f, 0xe3, 0x4c, 0xa1, 0xfa,
	0x6a, 0xed, 0x47, 0xce, 0x4d, 0xae, 0xe8, 0xc3, 0x59, 0x3c, 0xdd, 0x3e, 0x56, 0x38, 0x90, 0xe7,
	0xd2, 0x61, 0xe1, 0x40, 0x1e, 0x44, 0x87, 0x85, 0x03, 0x7e, 0xf6, 0x1c, 0xe2, 0x43, 0x18, 0x6e,
	0x29, 0x97, 0x71, 0xd8, 0x7d, 0x54, 0x2d, 0x9f, 0x7b, 0xf9, 0x28, 0x98, 0xa2, 0x79, 0x41, 0xd0,
	0x3c, 0xab, 0xe1, 0x66, 0x4a, 0xa6, 0x80, 0xde, 0x44, 0x33, 0xf8, 0x00, 0x86, 0x5b, 0x96, 0x75,
	0x84, 0xfb, 0xa8, 0x8a, 0x38, 0xc2, 0x7d, 0x64, 0xad, 0xaa, 0x9d, 0x13, 0xee, 0xc7, 0x72, 0xcd,
	0x2a, 0x15, 0x0e, 0xac, 0xdd, 0x43, 0xee, 0xdc, 0x01, 0x68, 0x54, 0x29, 0x38, 0x7c, 0x87, 0x85,
	0x6a, 0xc8, 0xdc, 0xe5, 0xae, 0x18, 0xe5, 0x33, 0x2b, 0x7c, 0x62, 0x1c, 0xf2, 0x89, 0xbf, 0x45,
	0x70, 0x3a, 0xa2, 0x2e, 0xc2, 0xb3, 0x5d, 0xa6, 0x6d, 0x2f, 0xce, 0x72, 0xd7, 0x7b, 0x03, 0x2b,
	0x32, 0x9a, 0x20, 0x73, 0x1e, 0xe7, 0xda, 0xc9, 0x14, 0x1a, 0xff, 0x48, 0x1e, 0xc3, 0x70, 0x4b,
	0x45, 0x12, 0x91, 0x84, 0xa8, 0x4a, 0x28, 0x22, 0x09, 0x91, 0x85, 0x4d, 0x4d, 0x90, 0x99, 0xb0,
	0x20, 0x5f, 0x23, 0x38, 0x1d, 0x71, 0xac, 0x45, 0x08, 0xd2, 0xf9, 0x68, 0x8e, 0x10, 0xa4, 0xcb,
	0x49, 0xa9, 0x4d, 0x08, 0x32, 0xe3, 0xb9, 0xb3, 0x21, 0x41, 0xd4, 0x0d, 0xf2, 0x37, 0x02, 0x1c,
	0xbe, 0x5e, 0xf1, 0x4c, 0xb7, 0x6d, 0xd9, 0x5a, 0x25, 0xe4, 0x66, 0x7b, 0xc2, 0x2a, 0x42, 0x9f,
	0x21, 0xc1, 0xe8, 0x63, 0x84, 0xcf, 0x77, 0xa0, 0x24, 0xb7, 0xf5, 0x35, 0x7c, 0xb5, 0xdb, 0xfb,
	0xfa, 0x16, 0x7f, 0xb8, 0x80, 0x6f, 0xf4, 0x04, 0x6c, 0x3f, 0x0b, 0x6e, 0x97, 0x60, 0xdc, 0x74,
	0x6c, 0xc5, 0x5d, 0xfc, 0xa0, 0x69, 0x44, 0x70, 0x7b, 0x48, 0xd1, 0xdf, 0xe0, 0xe3, 0x1b, 0xe8,
	0xe1, 0x42, 0xc9, 0x62, 0xfb, 0xc1, 0x4e, 0xde, 0x74, 0xec, 0x82, 0xfc, 0x83, 0x5b, 0x72, 0x5e,
	0x11, 0x0d, 0xc3, 0xb5, 0xfc, 0xf0, 0x4f, 0xe6, 0x5b, 0xea, 0xf9, 0x0f, 0x42, 0x3b, 0x29, 0x31,
	0xf9, 0x6b, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x02, 0xbe, 0xe4, 0xd2, 0x97, 0x16, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProjectServiceClient is the client API for ProjectService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProjectServiceClient interface {
	//
	ListProjects(ctx context.Context, in *ListProjectsRequest, opts ...grpc.CallOption) (*ListProjectsResponse, error)
	CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*CreateProjectResponse, error)
	UpdateProject(ctx context.Context, in *UpdateProjectRequest, opts ...grpc.CallOption) (*UpdateProjectResponse, error)
	GetProject(ctx context.Context, in *GetProjectRequest, opts ...grpc.CallOption) (*GetProjectResponse, error)
	GetProjectChecklist(ctx context.Context, in *GetProjectChecklistRequest, opts ...grpc.CallOption) (*GetProjectChecklistResponse, error)
	DeleteProject(ctx context.Context, in *DeleteProjectRequest, opts ...grpc.CallOption) (*DeleteProjectResponse, error)
	// Add/Delete/Change Project Members
	UpdateProjectMember(ctx context.Context, in *UpdateProjectMemberRequest, opts ...grpc.CallOption) (*UpdateProjectMemberResponse, error)
	ListProjectMembers(ctx context.Context, in *ListProjectMembersRequest, opts ...grpc.CallOption) (*ListProjectMembersResponse, error)
}

type projectServiceClient struct {
	cc *grpc.ClientConn
}

func NewProjectServiceClient(cc *grpc.ClientConn) ProjectServiceClient {
	return &projectServiceClient{cc}
}

func (c *projectServiceClient) ListProjects(ctx context.Context, in *ListProjectsRequest, opts ...grpc.CallOption) (*ListProjectsResponse, error) {
	out := new(ListProjectsResponse)
	err := c.cc.Invoke(ctx, "/argcv.app.manul.ProjectService/ListProjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*CreateProjectResponse, error) {
	out := new(CreateProjectResponse)
	err := c.cc.Invoke(ctx, "/argcv.app.manul.ProjectService/CreateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) UpdateProject(ctx context.Context, in *UpdateProjectRequest, opts ...grpc.CallOption) (*UpdateProjectResponse, error) {
	out := new(UpdateProjectResponse)
	err := c.cc.Invoke(ctx, "/argcv.app.manul.ProjectService/UpdateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) GetProject(ctx context.Context, in *GetProjectRequest, opts ...grpc.CallOption) (*GetProjectResponse, error) {
	out := new(GetProjectResponse)
	err := c.cc.Invoke(ctx, "/argcv.app.manul.ProjectService/GetProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) GetProjectChecklist(ctx context.Context, in *GetProjectChecklistRequest, opts ...grpc.CallOption) (*GetProjectChecklistResponse, error) {
	out := new(GetProjectChecklistResponse)
	err := c.cc.Invoke(ctx, "/argcv.app.manul.ProjectService/GetProjectChecklist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) DeleteProject(ctx context.Context, in *DeleteProjectRequest, opts ...grpc.CallOption) (*DeleteProjectResponse, error) {
	out := new(DeleteProjectResponse)
	err := c.cc.Invoke(ctx, "/argcv.app.manul.ProjectService/DeleteProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) UpdateProjectMember(ctx context.Context, in *UpdateProjectMemberRequest, opts ...grpc.CallOption) (*UpdateProjectMemberResponse, error) {
	out := new(UpdateProjectMemberResponse)
	err := c.cc.Invoke(ctx, "/argcv.app.manul.ProjectService/UpdateProjectMember", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) ListProjectMembers(ctx context.Context, in *ListProjectMembersRequest, opts ...grpc.CallOption) (*ListProjectMembersResponse, error) {
	out := new(ListProjectMembersResponse)
	err := c.cc.Invoke(ctx, "/argcv.app.manul.ProjectService/ListProjectMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProjectServiceServer is the server API for ProjectService service.
type ProjectServiceServer interface {
	//
	ListProjects(context.Context, *ListProjectsRequest) (*ListProjectsResponse, error)
	CreateProject(context.Context, *CreateProjectRequest) (*CreateProjectResponse, error)
	UpdateProject(context.Context, *UpdateProjectRequest) (*UpdateProjectResponse, error)
	GetProject(context.Context, *GetProjectRequest) (*GetProjectResponse, error)
	GetProjectChecklist(context.Context, *GetProjectChecklistRequest) (*GetProjectChecklistResponse, error)
	DeleteProject(context.Context, *DeleteProjectRequest) (*DeleteProjectResponse, error)
	// Add/Delete/Change Project Members
	UpdateProjectMember(context.Context, *UpdateProjectMemberRequest) (*UpdateProjectMemberResponse, error)
	ListProjectMembers(context.Context, *ListProjectMembersRequest) (*ListProjectMembersResponse, error)
}

func RegisterProjectServiceServer(s *grpc.Server, srv ProjectServiceServer) {
	s.RegisterService(&_ProjectService_serviceDesc, srv)
}

func _ProjectService_ListProjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProjectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).ListProjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/argcv.app.manul.ProjectService/ListProjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).ListProjects(ctx, req.(*ListProjectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_CreateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).CreateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/argcv.app.manul.ProjectService/CreateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).CreateProject(ctx, req.(*CreateProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_UpdateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).UpdateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/argcv.app.manul.ProjectService/UpdateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).UpdateProject(ctx, req.(*UpdateProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_GetProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).GetProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/argcv.app.manul.ProjectService/GetProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).GetProject(ctx, req.(*GetProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_GetProjectChecklist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectChecklistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).GetProjectChecklist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/argcv.app.manul.ProjectService/GetProjectChecklist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).GetProjectChecklist(ctx, req.(*GetProjectChecklistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_DeleteProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).DeleteProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/argcv.app.manul.ProjectService/DeleteProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).DeleteProject(ctx, req.(*DeleteProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_UpdateProjectMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProjectMemberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).UpdateProjectMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/argcv.app.manul.ProjectService/UpdateProjectMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).UpdateProjectMember(ctx, req.(*UpdateProjectMemberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_ListProjectMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProjectMembersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).ListProjectMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/argcv.app.manul.ProjectService/ListProjectMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).ListProjectMembers(ctx, req.(*ListProjectMembersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProjectService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "argcv.app.manul.ProjectService",
	HandlerType: (*ProjectServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListProjects",
			Handler:    _ProjectService_ListProjects_Handler,
		},
		{
			MethodName: "CreateProject",
			Handler:    _ProjectService_CreateProject_Handler,
		},
		{
			MethodName: "UpdateProject",
			Handler:    _ProjectService_UpdateProject_Handler,
		},
		{
			MethodName: "GetProject",
			Handler:    _ProjectService_GetProject_Handler,
		},
		{
			MethodName: "GetProjectChecklist",
			Handler:    _ProjectService_GetProjectChecklist_Handler,
		},
		{
			MethodName: "DeleteProject",
			Handler:    _ProjectService_DeleteProject_Handler,
		},
		{
			MethodName: "UpdateProjectMember",
			Handler:    _ProjectService_UpdateProjectMember_Handler,
		},
		{
			MethodName: "ListProjectMembers",
			Handler:    _ProjectService_ListProjectMembers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "argcv/proto/app/manul/project.proto",
}
